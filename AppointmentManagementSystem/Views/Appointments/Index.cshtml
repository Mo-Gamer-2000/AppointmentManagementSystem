@using AppointmentManagementSystem.Models.ArchiveState
@model IEnumerable<AppointmentManagementSystem.Models.Appointment>

@{
    ViewData["Title"] = "Appointments";
    bool isViewingArchived = ArchiveStateSingleton.Instance.IsViewingArchivedAppointments;
}

<h1>@ViewData["Title"]</h1>

<!-- Create new appointment button -->
<div class="mb-3">
    @if (!isViewingArchived)
    {
        <a asp-action="Create" class="btn btn-primary m-1">Create a New Appointment</a>
    }
    else
    {
        <span>Create New (Disabled)</span>
    }
    <p>
        <form asp-action="Index" asp-controller="Appointments" method="post">
            <button type="submit" name="showArchived" value="false" class="btn btn-outline-warning m-1">Upcoming Appointments</button>
            <button type="submit" name="showArchived" value="true" class="btn btn-outline-info m-1">Archived Appointments</button>
        </form>
    </p>
</div>

<!-- Table for displaying appointments -->
<div class="table-responsive">
    <table class="table table-striped table-bordered text-center">
        <thead>
            <tr>
                <th>Full Name</th>
                <th>Date</th>
                <th>Time</th>
                <th>Subject</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @{
                            // Retrieve user's phone number based on their email
                            var userManager = Context.RequestServices.GetRequiredService<UserManager<AppUser>>();
                            var user = await userManager.FindByEmailAsync(item.UserEmail);
                            if (user != null)
                            {
                                <p>@user.FirstName @user.LastName</p>
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.AppointmentDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.AppointmentTime)</td>
                    <td>@Html.DisplayFor(modelItem => item.AppointmentSubject)</td>
                    <td>
                        @if (!ArchiveStateSingleton.Instance.IsViewingArchivedAppointments)
                        {
                            <a asp-action="Edit" asp-route-id="@item.AppointmentId" class="btn btn-success mr-1">Edit</a>
                        }
                        @* @if (User.Identity.Name == "admin@admin.com") *@
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Details" asp-route-id="@item.AppointmentId" class="btn btn-info mr-1">Details</a>
                        }
                        <a asp-action="Delete" asp-route-id="@item.AppointmentId" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
